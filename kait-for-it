#!/usr/bin/env bash

function _usage {
  echo "The script checks for pods to reach ready status."
  echo "It runs kubectl wait in a loop, and provides stdout output for codefresh. "
  echo ""
  echo "usage: kait-for-it -n namespace -p pod-name [-t timeout] | [-h]"
  echo ""
  echo "-n, --namespace    namespace to target"
  echo "-t, --timeout      timeout, in minutes"
  echo "-p, --pod          pods to target, supports glob, can be used multiple times."
}

if [ "${#}" -eq 0 ]; then
  _usage
  exit 1
fi

while [ "$1" != "" ]; do
  case "${1}" in
    -t | --timeout )
      shift
      timeout="${1}"
      ;;
    -n | --namespace )
      shift
      namespace="${1}"
      ;;
    -p | --pod )
      shift
      targeted_pods="${1} ${targeted_pods}"
      ;;
    -h | --help )
      _usage
      exit 0
      ;;
    * )
      _usage
      exit 1
  esac
  shift
done

running_pods=$(kubectl --namespace ${namespace} get pod --no-headers -o custom-columns=:metadata.name)

for i in $running_pods; do
  for j in $targeted_pods; do
    if [[ "$i" == ${j} ]]; then
      selected_pods="pod/$i $selected_pods"
    fi
  done
done

iteration=0
kubectl wait --namespace ${namespace} --timeout=10s --for=condition=ready ${selected_pods}
pod_status=$?

until [ ${pod_status} -eq 0 ] || [ ${iteration} -ge ${timeout:-10} ]; do
  sleep 60
  let iteration=${iteration}+1
  kubectl wait --namespace ${namespace} --timeout=10s --for=condition=ready ${selected_pods}
  pod_status=$?
done

if [ ${pod_status} -eq 0 ]; then
  echo "Selected pods ready."
else
  echo "Timed out."
fi
exit ${pod_status}
